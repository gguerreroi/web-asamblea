<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Asamblea</title>
    <link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://kit.fontawesome.com/a81368914c.js"></script>
    <style>
        .c-card img {
            transition: transform .3s ease-in-out;
        }

        .c-card img:hover {
            transform: scale(1.05);
        }
    </style>
</head>
<body class="bg-gray-300" style="font-family: Roboto;">
<div class="container">
    <div class="bg-white p-2 w-screen h-40 shadow-lg">
        <div>
            <img src="./images/logo-micoope.png" alt="Logo MICOOPE" class="float-left w-32 p-2">
        </div>
        <div class="text-center">
            <h1 class="text-4xl text-blue-900 font-bold"><%- title %> </h1>
            <p class="text-base font-semibold text-green-600 "><%- subtitle %></p>
            <p class="text-base text-left"> Bienvenido(a): <b><%- user.StrNombreAsociado %></b></p>
            <p class="text-base text-left"> Cuenta Aportaci√≥n: <b><%- user.NumCuenta %></b></p>
            <input type="hidden" id="codcliente" value="<%- user.CodCliente %>">
            <input type="hidden" id="numtelefono" value="<%- user.NumTelefono %>">
        </div>
    </div>

    <div class="flex justify-center items-center w-screen content-evenly p-4 " id="desk">
        <div class="bg-white p-2 h-60 shadow-lg votation-empty hidden">
            <h4 class="text-gray-700 text-base text-center p-2 font-semibold">
                No hay votaciones disponibles en este momento
            </h4>
        </div>

        <div class="bg-white h-60 flex items-center justify-center px-5 py-5" x-data="beer()" x-init="start()">
            <div class="text-blue-900">
                <h1 class="text-3xl text-center mb-3 font-extralight">La asamblea inicia en </h1>
                <div class="text-6xl text-center flex w-full items-center justify-center">
                    <div class="text-2xl mr-1 font-extralight"></div>
                    <div class="w-24 mx-1 p-2 bg-blue-900 text-white rounded-lg">
                        <div class="font-mono leading-none" x-text="days">00</div>
                        <div class="font-mono uppercase text-sm leading-none">Days</div>
                    </div>
                    <div class="w-24 mx-1 p-2 bg-blue-900 text-white rounded-lg">
                        <div class="font-mono leading-none" x-text="hours">00</div>
                        <div class="font-mono uppercase text-sm leading-none">Hours</div>
                    </div>
                    <div class="w-24 mx-1 p-2 bg-blue-900 text-white rounded-lg">
                        <div class="font-mono leading-none" x-text="minutes">00</div>
                        <div class="font-mono uppercase text-sm leading-none">Minutes</div>
                    </div>
                    <div class="text-2xl mx-1 font-extralight"> : </div>
                    <div class="w-24 mx-1 p-2 bg-blue-900 text-white rounded-lg">
                        <div class="font-mono leading-none" x-text="seconds">00</div>
                        <div class="font-mono uppercase text-sm leading-none">Seconds</div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<%- include('../partials/common.ejs'); -%>
<script
        src="https://code.jquery.com/jquery-3.6.0.js"
        integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk="
        crossorigin="anonymous"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.js" ></script>
<script>
    "use strict"
    function beer() {
        return {
            seconds: '00',
            minutes: '00',
            hours: '00',
            days: '00',
            distance: 0,
            countdown: null,
            beerTime: new Date('Aug 16, 2021 14:30:00').getTime(),
            now: new Date().getTime(),
            start: function() {
                this.countdown = setInterval(() => {
                    // Calculate time
                    this.now = new Date().getTime();
                    this.distance = this.beerTime - this.now;
                    // Set Times
                    this.days = this.padNum( Math.floor(this.distance / (1000*60*60*24)) );
                    this.hours = this.padNum( Math.floor((this.distance % (1000*60*60*24)) / (1000*60*60)) );
                    this.minutes = this.padNum( Math.floor((this.distance % (1000*60*60)) / (1000*60)) );
                    this.seconds = this.padNum( Math.floor((this.distance % (1000*60)) / 1000) );
                    // Stop
                    if (this.distance < 0) {
                        clearInterval(this.countdown);
                        this.days = '00';
                        this.hours = '00';
                        this.minutes = '00';
                        this.seconds = '00';
                    }
                },100);
            },
            padNum: function(num) {
                var zero = '';
                for (var i = 0; i < 2; i++) {
                    zero += '0';
                }
                return (zero + num).slice(-2);
            }
        }
    }

    $(".votar").submit(e => {
        e.preventDefault()
        console.log("votar")
    })

    $(document).ready(function () {
        const codcliente = $("#codcliente").val()
        $.ajax({
            url: `${URL_API}/asociados/votaciones/${codcliente}`,
            method: 'GET',
            timeout: 0
        }).then(response => {
            const Votes = response.data;

            $.ajax({
                url: `${URL_API}/asociados/opciones`,
                method: 'GET',
                timeout: 0
            }).then(options => {
                const AllOps = options.data;
                const VotesAvailable = Votes.filter(va => va.CodEstado === 'E')
                VotesAvailable.forEach(function (vote) {
                    const optsbyvotes = AllOps.filter(opts => opts.CodVotacion === vote.CodVotacion);
                    let htmlTemplate = templateVotation(vote, optsbyvotes);

                    $("#desk").append(htmlTemplate)
                })
            })
        })

    })

    function templateCandidates(Info) {
        return `
                            <div class="w-full sm:w-auto mx-1">
                                <div class="c-card block bg-white shadow-md hover:shadow-xl rounded-lg overflow-hidden">
                                    <div class="relative pb-64 overflow-hidden">
                                        <img src="${Info.RefImg}" alt=""
                                             class="absolute inset-0 h-full w-full object-cover">
                                    </div>
                                    <div class="p-4">
                                        <span class="inline-block px-2 py-1 leading-none bg-green-200 text-blue-900 rounded-full font-semibold uppercase tracking-wide text-sm ">
                                            ${Info.StrDescripcion}
                                        </span>
                                        <input type="hidden" name="codvotacion" value="" required>
                                        <input type="hidden" name="codoption" value="" required>
                                        <button class="w-full py-2 rounded-full bg-green-600 text-gray-100  focus:outline-none my-2 hover:bg-blue-900"
onclick="EmitirVoto('${Info.CodVotacion}', '${Info.CodOpcion}', '${Info.StrDescripcion}')">
                                            VOTAR
                                        </button>
                                    </div>
                                </div>
                            </div>`
    }

    function templateVotation(Info, opts) {
        let votation = "";
        let votation_start = `<div class="bg-white h-full shadow-lg m-1 w-full ">
            <div class="m-2">
                <h2 class="text-3xl text-blue-900 font-bold m-2 text-center">
                ${Info.StrTitulo}</h2>
                <div class="container mx-auto w-full items-center ">
                    <div class="grid grid-cols-2 mx-1 ">`
        let votation_end = `<br>
                    </div>
                </div>
            </div>
        </div>`

        votation = votation_start;
        opts.forEach(function (op) {
            votation = votation + templateCandidates(op)
        })
        votation = votation + votation_end
        return votation;
    }

    function EmitirVoto(codvotacion, codopcion, strnombre) {
        const codcliente = $("#codcliente").val()
        const numtelefono = $("#numtelefono").val()
        swal({
            title: 'Esta seguro de emitir su voto?',
            text: `Usted emitira su sufragio a favor de ${strnombre}`,
            icon: "warning",
            buttons: {
                cancel: 'Cancelar',
                confirm: 'Emitir Voto'
            },
            dangerMode: true
        }).then(confirm => {
            if (confirm) {
                $.ajax({
                    url: `${URL_API}/asamblea/votar`,
                    method: 'POST',
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    data: {
                        codvotacion: codvotacion,
                        codopcion: codopcion,
                        codcliente: codcliente
                    }
                }).then(response => {

                    const {state, data} = response;
                    const huella = data[0].Huella
                    console.log("data", huella)
                    if (state.Code == "1") {
                        $.ajax({
                            url: 'http://servicio.smsmasivos.com.ar/enviar_sms_bloque.asp',
                            method: 'POST',
                            timeout:0,
                            headers: {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            data: {
                                USUARIO: "SMSDEMOGTC116072",
                                CLAVE: "SMSDEMOGTC116072214",
                                SEPARADORCAMPOS: ",",
                                BLOQUE: `${codcliente},${numtelefono},Voto Emitido con exito. La huella de seguridad es: ${huella}`
                            }
                        })
                        swal("Sufragio Registrado", "Sufragio emitido correctamente", "success").then(() => {
                            window.location.reload();
                        })
                    } else {
                        swal("La votacion ya termino", `${data.originalError.info.message}`, "error").then(() => {
                            window.location.reload();
                        })
                    }

                })

            }

        })
    }
</script>
</body>
</html>